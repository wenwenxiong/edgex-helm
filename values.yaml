# Default values for Edgex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


expose:
  # Option value: ClusterIP/NodePort/LoadBalancer
  type: NodePort
  nodePort:
    core:
      data: 30080
      metadata: 30081
      command: 30082
      consul: 30850
    support:
      rulesengine: 30075
      notifications: 30060
      scheduler: 30085
    appservice:
      rules: 30100
    device:
      virtual: 31990
      rest: 31986
    ui: 30400
    system: 30090
    redis: 30079

# edgex defines a set of configuration properties for application-level concerns
edgex:
  # app defines a single point in naming/referring to an application. For each application, the value
  # define its label name, resource name or base of the resource name, and service name.
  app:
    core:
      command: edgex-core-command
      data: edgex-core-data
      metadata: edgex-core-metadata
      consul: edgex-core-consul
    support:
      notifications: edgex-support-notifications
      rulesengine: edgex-support-rulesengine
      scheduler: edgex-support-scheduler
    appservice:
      rules: edgex-app-service-configurable-rules
    device:
      virtual: edgex-device-virtual
      rest: edgex-device-rest
    ui: edgex-ui
    system: edgex-sys-mgmt-agent
    redis: edgex-redis

  # image defines configuration properties for docker-image-level concerns
  image:
    core:
      command:
        repository: docker.io:8443/edgexfoundry/core-command
        tag: 2.0.0
        pullPolicy: IfNotPresent
      data:
        repository: docker.io:8443/edgexfoundry/core-data
        tag: 2.0.0
        pullPolicy: IfNotPresent
      metadata:
        repository: docker.io:8443/edgexfoundry/core-metadata
        tag: 2.0.0
        pullPolicy: IfNotPresent
      consul:
        repository: docker.io:8443/consul
        tag: 1.9.5
        pullPolicy: IfNotPresent
    support:
      notifications:
        repository: docker.io:8443/edgexfoundry/support-notifications
        tag: 2.0.0
        pullPolicy: IfNotPresent
      rulesengine:
        repository: docker.io:8443/lfedge/ekuiper
        tag: 1.3.0-alpine
        pullPolicy: IfNotPresent
      scheduler:
        repository: docker.io:8443/edgexfoundry/support-scheduler
        tag: 2.0.0
        pullPolicy: IfNotPresent
    appservice:
      rules:
        repository: docker.io:8443/edgexfoundry/app-service-configurable
        tag: 2.0.1
        pullPolicy: IfNotPresent
    device:
      virtual:
        repository: docker.io:8443/edgexfoundry/device-virtual
        tag: 2.0.0
        pullPolicy: IfNotPresent
      rest:
        repository: docker.io:8443/edgexfoundry/device-rest
        tag: 2.0.0
        pullPolicy: IfNotPresent
    ui:
      repository: docker.io:8443/edgexfoundry/edgex-ui
      tag: 2.0.0
      pullPolicy: IfNotPresent
    system:
      repository: docker.io:8443/edgexfoundry/sys-mgmt-agent
      tag: 2.0.0
      pullPolicy: IfNotPresent
    redis:
      repository: docker.io:8443/redis
      tag: 6.2.4-alpine
      pullPolicy: IfNotPresent

  # replicas defines the number of replicas in a Deployment for the respective application
  replicas:
    core:
      command: 1
      data: 1
      metadata: 1
      consul: 1
    support:
      notifications: 1
      rulesengine: 1
      scheduler: 1
    appservice:
      rules: 1
    device:
      virtual: 1
      rest: 1
    ui: 1
    system: 1
    redis: 3

  # resources defines the cpu and memory limits and requests for the respective application
  resources:
    core:
      command:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
      data:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
      metadata:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
      consul:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
    support:
      notifications:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
      rulesengine:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
      scheduler:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
    appservice:
      rules:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
    device:
      virtual:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
      rest:
        enforceLimits: false
        limits:
          cpu: 1
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 256Mi
    ui:
      enforceLimits: false
      limits:
        cpu: 1
        memory: 512Mi
      requests:
        cpu: 0.5
        memory: 256Mi
    system:
      enforceLimits: false
      limits:
        cpu: 1
        memory: 512Mi
      requests:
        cpu: 0.5
        memory: 256Mi
    redis:
      server:
        requests:
          memory: 200Mi
          cpu: 100m
        limits:
          memory: 700Mi
      sentinel:
        requests:
          memory: 200Mi
          cpu: 100m
        limits:
          memory: 200Mi
rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
